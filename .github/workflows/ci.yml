name: Docker Image CI

on: 
  workflow_dispatch:
    inputs:
      suite:
        description: 'Ubuntu Suite'     
        required: true
        default: 'noble'
      version:
        description: 'GCC Version'
        required: true
        default: '13.2.0'

env:
  REGISTRY_IMAGE: ${{ secrets.DOCKERHUB_USERNAME }}/gcc
  IMAGE_TAG: ${{ github.event.inputs.version }}-${{ github.event.inputs.suite }}

jobs:
  build:
    runs-on: ${{ matrix.runner }}
    strategy:
      matrix:
        include:
          - runner: ubuntu-24.04
            platform: linux/amd64
            suffix: amd64
          - runner: ubuntu-24.04-arm
            platform: linux/arm64/v8
            suffix: arm64v8
    name: build-${{ github.event.inputs.version }}-${{ github.event.inputs.suite }}-${{ matrix.suffix }}
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    - name: Generate Dockerfile
      run: ./update.sh ${{ github.event.inputs.suite }} ${{ github.event.inputs.version }}
    - name: Build and push
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./${{ github.event.inputs.version }}-Dockerfile.tmp
        platforms: ${{ matrix.platform }}
        push: true
        tags: ${{ env.REGISTRY_IMAGE }}:${{ env.IMAGE_TAG }}-${{ matrix.suffix }}

  merge:
    runs-on: ubuntu-24.04
    name: create-manifest
    steps:
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    - name: Create manifest list and push
      run: |
        docker buildx imagetools create -t ${{ env.REGISTRY_IMAGE }}:${{ env.IMAGE_TAG }} \
          ${{ env.REGISTRY_IMAGE }}:${{ env.IMAGE_TAG }}-amd64 \
          ${{ env.REGISTRY_IMAGE }}:${{ env.IMAGE_TAG }}-arm64v8
